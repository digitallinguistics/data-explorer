@open-bracket: 'data:image/svg+xml;utf8,<svg viewBox="0 0 32 32" height="512" width="512" xmlns="http://www.w3.org/2000/svg"><path d="m19 27a1 1 0 0 0 0-2 2 2 0 0 1 -2-2v-4a3.839 3.839 0 0 0 -1.716-3 3.839 3.839 0 0 0 1.716-3v-4a2 2 0 0 1 2-2 1 1 0 0 0 0-2 4 4 0 0 0 -4 4v4c0 1-1.459 1.862-2.209 2.022a1 1 0 0 0 0 1.956c.75.16 2.209 1.022 2.209 2.022v4a4 4 0 0 0 4 4z" /></svg>';

@import 'Bulleted/Bulleted.less';
@import 'BoxInput/BoxInput.less';
@import 'Checkbox/Checkbox.less';
@import 'Cite/Cite.less';
@import 'Code/Code.less';
@import 'DefinitionList/DefinitionList.less';
@import 'Details/Details.less';
@import 'Headword/Headword.less';
@import 'HelpText/HelpText.less';
@import 'Label/Label.less';
@import 'List/List.less';
@import 'Morphophonemic/Morphophonemic.less';
@import 'Note/Note.less';
@import 'Numbered/Numbered.less';
@import 'PageNav/PageNav.less';
@import 'PageTitle/PageTitle.less';
@import 'Translation/Translation.less';
@import 'MultiLangString/MultiLangString.less';
@import 'MultiOrthoTranscription/MultiOrthoTranscription.less';
@import 'SectionHeader/SectionHeader.less';
@import 'Tag/Tag.less';
@import 'Transcription/Transcription.less';

// Handle case where the URL has no hash.
body:target #forms {
  display: flex;
}

.lexeme-page {

  @breakpoint: 45em;

  align-self     : center;
  inline-size    : 100%;
  max-inline-size: var(--measure);

  .allomorph {
    align-items   : center;
    flex-direction: row;
  }

  .allomorphs__label {
    align-self: start;
  }

  .bib-entry {
    margin-inline-start: 1.5em;
    padding            : var(--text-padding);
    text-indent        : -1.5em;
  }

  .bib-links {
    font-size    : smaller;
    padding-block: var(--text-block-padding-lg);
  }

  .bib-table-link {
    padding: var(--text-padding-lg);
  }

  .citation {
    --tag-color: var(--indigo-1);
  }

  #citation-form {
    padding: var(--text-padding-lg);
  }

  #cross-references {
    align-items: baseline;
    padding    : 0em;
  }

  span#cross-references {
    padding: var(--text-padding);
  }

  .checkbox {
    align-self   : center;
    margin-inline: var(--space-xs);
  }

  :is(.cross-refs-set, .cross-lang-refs-set) {
    flex-direction     : row;
    flex-wrap          : wrap;
    gap                : var(--space-xxxs);
    margin-inline-start: calc(-1 * var(--text-inline-padding-sm));
  }

  :is(.cross-refs-set, .cross-lang-refs-set) li {
    display    : inline;
    white-space: nowrap;
  }

  .cross-lang-refs-set {
    margin-inline-start: 0;
  }

  :is(#date-created, #date-modified) {
    font-family: var(--font-mono);
  }

  .empty-list {
    padding   : var(--text-padding);
    text-align: center;
  }

  // These styles mimick those of the MultiOrthoTranscription
  // in order to vertically align the content.
  .environment {
    padding-inline  : var(--text-inline-padding);
    margin-block-end: var(--text-block-padding);
  }

  .etymology {
    gap: var(--space-xs);
  }

  .form {

    summary {
      align-items        : center;
      margin-inline-start: -3.5em;  // lines up left edge of text
    }

    summary::before {
      margin-inline-end: 1.25em;
    }

  }

  .form__transcription {
    padding: var(--text-padding);
  }

  .form-props {
    align-items        : baseline;
    padding-block-start: var(--space-xs);
  }

  #forms {
    flex-direction: row;
    flex-wrap     : wrap;
    padding-block: var(--space-xs);
  }

  :is(.forms-list, .senses-list) {
    @media (max-width: 60em) {
      border-radius: 0;
      border-inline: none;
    }
  }

  .forms-section {

    inline-size: 100%;

    .section-header {
      text-align: center;
    }

  }

  .header {

    flex-direction : row;
    flex-wrap      : wrap;
    justify-content: space-between;

    .gloss {
      padding: var(--text-padding-sm);
    }

    .glosses {
      inline-size: 100%;
      padding    : var(--text-padding);
    }

    .language {

      padding: var(--text-padding-lg);

      &:visited span {

        color: var(--purple);

        @media (prefers-color-scheme: dark) {
          color: var(--purple-4);
        }

      }

    }

  }

  .label {
    padding: var(--text-padding);
  }

  .lang-label {
    font-size  : smaller;
    white-space: nowrap;
  }

  #language-autonym {
    align-self: start;
  }

  #language-name {
    align-self: start;
  }

  #lemma {
    padding: var(--text-padding);
  }

  #lexeme-sources .tag {
    --tag-color: var(--teal-1);
  }

  .lexeme__transcriptions {
    min-inline-size: 50%;
  }

  #metadata {
    padding-block: var(--space-xs);
  }

  .metadata-props {
    align-items: baseline;
  }

  .notes {

    --note-spacing: var(--space);

    background-color: var(--teal-1);
    border          : var(--border);
    border-radius   : var(--border-radius);
    box-shadow      : inset var(--box-shadow);
    gap             : var(--note-spacing);
    padding         : var(--note-spacing);

    &:empty {
      border : none;
      display: none;
    }

  }

  .notes-section {

    summary {
      margin-inline-start: -3.25em;
    }

  }

  .page-nav ul {
    margin-block-end: calc(-0.5 * var(--border-width)); // needed b/c of collapsing border with next element (I think)
  }

  .page-title {
    align-self : flex-start;
    font-family: var(--font-unicode);
    text-align : left;
  }

  .panel {
    margin-block-end: var(--space);
  }

  .panel:not(.current, :target) {
    display: none;
  }

  .section-header {
    padding: var(--text-padding);
  }

  .sense {

    padding: var(--space-sm);

    abbr:is(.sense__base-category, .sense__category, .sense__inflection-class, .sense__semantic-class) {
      cursor: help;
    }

  }

  .senses-list {
    border-block-start       : none;
    border-start-start-radius: 0;
    border-start-end-radius  : 0;
  }

  .summary-count {
    font-size: smaller;
  }

  #tags .tag {
    --tag-color: var(--cyan-1);
  }

  .tags-list {
    flex-direction: row;
    flex-wrap     : wrap;
    gap           : var(--space-xs);
  }

  #url {

    background-color: var(--orange-1);
    border          : none;
    font-family     : var(--font-mono);
    margin          : var(--space-xs);
    overflow-x      : auto;
    white-space     : nowrap;

    @media (prefers-color-scheme: dark) {
      color: var(--background-color-dark);
    }

  }

}
