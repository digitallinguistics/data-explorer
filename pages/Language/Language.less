@import 'ColorBlock/ColorBlock.less';
@import 'BoxInput/BoxInput.less';
@import 'DefinitionList/DefinitionList.less';
@import 'Markdown/Markdown.less';
@import 'MultiLangString/MultiLangString.less';
@import 'MultiOrthoTranscription/MultiOrthoTranscription.less';
@import 'Note/Note.less';
@import 'Notes/Notes.less';
@import 'Label/Label.less';
@import 'PageNav/PageNav.less';
@import 'PageTitle/PageTitle.less';
@import 'SectionHeader/SectionHeader.less';

.language-page {

  // override Definition List layout
  .codes {

    --block-color  : var(--green-1);
    display        : flex;
    flex-direction : row;
    flex-wrap      : wrap;
    justify-content: space-between;

    dd {
      align-self: center;
    }

  }

  .color-block {

    margin-inline  : var(--text-inline-padding);
    max-inline-size: 100%;

    .link svg {
      color: black;
    }

  }

  .def-list :is(dd, output) {
    font-family: var(--font-mono);
  }

  .description {
    --block-color: var(--cyan-1);
  }

  :is(.mls, .mot) {
    font-size: larger;
    padding  : var(--text-padding);
  }

  .metadata {

    --block-color: var(--orange-1);

    output {
      white-space: nowrap;
    }

  }

  .names {

    --block-color : var(--blue-1);
    flex-direction: row;
    flex-wrap     : wrap;
    padding       : var(--space);

    :is(.name, .autonym) {
      flex-grow: 1;
    }

  }

  .notes-section {

    align-items        : center;
    display            : grid;
    grid-template-areas:
      'header toggle .'
      'notes notes notes';
    grid-template-columns: min-content;

    .notes {
      grid-area    : notes;
      margin-inline: var(--text-inline-padding);
    }

    .section-header {
      grid-area: header;
    }

  }

  .section-header {
    padding: var(--text-padding);
  }

  #url {
    overflow-x: auto;
  }

}
